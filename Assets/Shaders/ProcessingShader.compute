#pragma kernel NormalizeImage

// Input image texture
Texture2D<float4> _InputImage;

// Output image texture
RWTexture2D<float4> _Result;

// Structured buffer to hold the mean values for each color channel (r, g, b)
RWStructuredBuffer<float> _Mean;

// Structured buffer to hold the standard deviation values for each color channel (r, g, b)
RWStructuredBuffer<float> _Std;

// The compute shader kernel
[numthreads(8, 8, 1)]
void NormalizeImage(uint3 id : SV_DispatchThreadID)
{
    // Normalize the color values for each channel (r, g, b)
    _Result[id.xy] = float4(
        // Normalize the red channel
        (_InputImage[id.xy].r - _Mean[0]) / _Std[0],
        // Normalize the green channel
        (_InputImage[id.xy].g - _Mean[1]) / _Std[1],
        // Normalize the blue channel
        (_InputImage[id.xy].b - _Mean[2]) / _Std[2],
        // Leave the alpha channel unchanged
        _InputImage[id.xy].a);
}
